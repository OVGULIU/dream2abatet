function dream2abatet(nodeFile,triFile,featureFile,keepRatio,maxVol,abaMeshFlag)
    % *dream2abatet* 
    % - generates volume mesh for given Dream.3D surface mesh
    % - writes ABAQUS input file containing the generated mesh
    %
    % % Syntax 
    % dream2abatet(nodeFile,triFile,featureFile,keepRatio,maxVol,abaMeshFlag)
    % 
    % Input
    % * full paths to files written by Dream.3D
    % nodeFile - text file with nodes written by Dream.3D
    % triFile  - text file with triangles written by Dream.3D
    % triFile  - csv file with feature attributes 
    % * parameters for mesh generation
    % keepRatio - fraction of elements preserved 
    % after simplification (iso2mesh)
    % maxVol - maximum volume for tetrahedra elements (iso2mesh)
    % * abaMeshFlag - flag for writing ABAQUS mesh (true/false or 1/0)
    %
    % Output
    % ABAQUS input file with generated mesh 
    %
    % Example
    % dream2abatet('nodes.in','tri.in','features.csv',0.75,0.5,true)
    %
    % Note: *dream2abatet* relies on iso2mesh 
    % toolbox by Qianqian Fang (http://iso2mesh.sf.net)

    % --------------------------
    % dream2abatet is written by
    % Marat I. Latypov while at POSTECH
    % latmarat@postech.edu, http://latmarat.net
    % September 2014
    % --------------------------

    tic 
    %% read Dream.3D files
    % read nodes
    fid = fopen(nodeFile,'rt');
    rawNodeData = textscan(fid, '%d %d %f %f %f', 'Headerlines', 1);
    fclose(fid);

    % read triangles
    fid = fopen(triFile,'rt');
    rawTriData = textscan(fid, '%d %d %d %d %d %d %d %d %d', 'Headerlines', 1);
    fclose(fid);

    % read feature attribues
    fid = fopen(featureFile,'rt');
    rawFieldData = textscan(fid, '%d %d %f %f %f %f %f %f %f %f %f %f %d %d %d %f', 'Headerlines', 2, 'delimiter',',');
    fclose(fid);

    %% digest mesh and feature information
    % read vertices and faces
    v0 = cell2mat(rawNodeData(3:5));
    f0 = cell2mat(rawTriData(2:4));
    f0 = f0+1;
    
    % read centroids
    centroids = cell2mat(rawFieldData(9:11));
    grains = cell2mat(rawFieldData(1));

    %% generate volume mesh
    % fix duplicates
    [v,f] = meshcheckrepair(v0,f0,'dup');
    maxV = max(v);
    minV = min(v);

    % % uncomment to remesh surface
    % % refer to iso2mesh docs to set parameters
    % opt.gridsize = 0.25;
    % opt.elemsize = 1;
    % [v,f]=remeshsurf(v0,f0,opt);

    % call iso2mesh function
    [nodes,elem,faces] = surf2mesh(v,f,minV,maxV,keepRatio,maxVol,centroids);
    
    % check mesh quality
    quality = meshquality(nodes,elem);
    meanQ = mean(quality);
    
    % find the middle along X
    midX = (maxV(1)-minV(1))/2;
    cutX = ['x>', num2str(midX)];
    
    % visualize original and generated mesh
    figure;
    subplot(1,3,1);
    plotmesh(v0,f0,cutX)
    title('Original Surface Mesh')
    subplot(1,3,2);
    plotmesh(nodes,elem,cutX)
    title('Generated Volume Mesh')
    subplot(1,3,3);
    plotmesh(nodes,elem,'facealpha',0.5,'linestyle','none')
    title('Regions (Features) with Centroids')
    
    % comment to hide centroids
    hold on
    for i = 1:size(centroids,1)
        plot3(centroids(i,1),centroids(i,2),centroids(i,3),'ko')
    end
    
    %% write mesh to ABAQUS inp file
    if abaMeshFlag
        fprintf('Writing ABAQUS mesh...\n');
        
        % get path to write 
        [inpFileDir,~,~] = fileparts(nodeFile);
        if strcmp(inpFileDir,'') == 0
            inpFileName = [inpFileDir '\dream.inp'];
        else
            inpFileName = 'dream.inp';
        end 
        inpFile = fopen(inpFileName,'wt');
        
        % write headings
        fprintf(inpFile,'** Generated by dream2abatet.m\n');
        fprintf(inpFile,'**PARTS\n**\n');
        fprintf(inpFile,'*Part, name=DREAMTET\n'); 

        % write nodes
        nlabels = 1:size(nodes,1);
        abanodes = [nlabels', nodes];
        fprintf(inpFile,'*NODE, NSET=AllNodes\n');
        fprintf(inpFile,'%d,\t%e,\t%e, \t%e\n',abanodes');

        % write elements
        conn = elem(:,1:4);
        elabels = 1:size(elem,1);
        abaelem = [elabels' conn];
        fprintf(inpFile,'*Element, type=C3D4, ELSET=AllElements\n');
        fprintf(inpFile,'%d,\t%d,\t%d,\t%d,\t%d\n',abaelem');

        % create element sets containing grains
        grains = elem(:,5);
        for ii = 1:numel(unique(grains))
            % check if the set is empty
            if isempty(abaelem(grains==ii))
                fprintf('WARNING! Set Grain-%d is empty\n', ii);
            else
                fprintf(inpFile,'\n*Elset, elset=Grain-%d\n',ii);
                fprintf(inpFile,'%d, %d, %d, %d, %d, %d, %d, %d, %d\n',elabels(grains==ii)');
            end
        end

        % write closing and close the file
        fprintf(inpFile,'\n**\n*End Part\n');
        fclose(inpFile);  
        
    end
        
    % display messages
    fprintf('***dream2abatet.m completed***\n');
    if abaMeshFlag
        fprintf('ABAQUS mesh is written to %s\n', inpFileName);
    end
    fprintf('Mean quality of the mesh: %.2f\n', meanQ) 
    toc
    
end